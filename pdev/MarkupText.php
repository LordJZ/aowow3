<?phpenum(array( // MarkupTextFlags	'MTFLAG_PARAGRAPH'	=> 0x01,	'MTFLAG_FORCETEXT'	=> 0x02,));enum(array( // BasicMarkupTexts	'MARKUPTEXT_ONELINER'	=> 1,	'MARKUPTEXT_NEWSTEXT'	=> 2,));class MarkupText implements ICacheable_DatabaseObject{	var $id = 0;	private $contents = '';	var $html = '';	var $hash = '';	var $flags = 0;	var $links = array();	var $parsed = false;	function parse($group = U_GROUP_ALL)	{		if (!$this->parsed)		{			$this->contents = trim(str_replace("\r", '', $this->contents));			if(!($group & U_GROUP_SEE_ADMIN_TAG))				$this->contents = preg_replace('/(\[admin\](.+?)\[\/admin\])/s', '', $this->contents);			if($group & U_GROUP_LINKS_ALLOWED)			{				if(preg_match_all('/(\[(achievement|item|quest|spell|npc)=(\d+)\])/', $this->contents, $matches))				{					// TODO: fill in $this->links here				}			}			$this->hash = substr(md5($this->contents), 0, 6);		}	}	function toHTML()	{		if (!$this->parsed)			$this->parse();		if (empty($this->html))		{			$element = $this->hasFlag(MTFLAG_PARAGRAPH) ? 'p' : 'div';			$this->html = '<'.$element.' ';			$this->html .= 'id="markup-'.($this->hash).'"';			if($this->hasFlag(MTFLAG_FORCETEXT))				$this->html .= ' class="text"';			$this->html .= '></'.$element.'>';			$this->html .= '<script type="text/javascript">';			$this->html .= 'Markup.printHtml("'.jsEscape($this->contents).'", "markup-'.($this->hash).'"';			if($this->id)				$this->html .= ', { uid: '.($this->id).' }';			$this->html .= ')</script>';		}		return $this->html;	}	/*	function replace($arr)	{		foreach($arr as $name => $value)			$this->contents = str_replace('%'.$name.'%', $value, $this->contents);	}	*/	function setFlag($to) { $this->flags |= $to; }	function hasFlag($flag) { return ($this->flags & $flag) != 0; }	private static $store = array(); 	public static function Get($id)	{		if (isset(self::$store[$id]))			return self::$store[$id];		if ($cache = Cache::GetCurrent($id))			return $cache->object;					$result = DB::World()->SelectRow('SELECT id, content, flags FROM ?_markup2_texts WHERE id = ?d', $id);		if($result)			return new MarkupText($result['id'], $result['content'], $result['flags']);		return null;	}	function GetCacheHash($id) { return Cache::CreateHash(0, $id); }	static function GetCacheLifeTime() { return 30*DAY; }	static function GetCacheTablePostfix() { return 'texts'; }	function __sleep()	{		if (empty($this->html))			$this->toHTML();		return array(			'id',			'contents',			'html',			'hash',			'flags',			'links',			//'parsed',		);	}	function __wakeup()	{		if ($this->links)			Main::$gathered = array_merge_replace_recursive(Main::$gathered, $this->links);	}	function __create($id)	{		$result = DB::World()->SelectRow('SELECT id, content, flags FROM ?_markup2_texts WHERE id = ?d', $id);		if($result)		{			$this->id = $result['id'];			$this->contents = $result['content'];			$this->flags = $result['flags'];		}		else			echo 'failed to load sql for markuptext '.$id;	}	public function getContents() { return $this->contents; }	public function setContents($contents)	{		$this->html = '';		$this->contents = $contents;	}}?>